"use strict";(()=>{var e={};e.id=269,e.ids=[269],e.modules={2104:e=>{e.exports=require("@next-auth/prisma-adapter")},3524:e=>{e.exports=require("@prisma/client")},3227:e=>{e.exports=require("next-auth")},2113:e=>{e.exports=require("next-auth/next")},3598:e=>{e.exports=require("next-auth/providers/google")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5951:(e,t,r)=>{r.r(t),r.d(t,{config:()=>p,default:()=>d,routeModule:()=>l});var s={};r.r(s),r.d(s,{default:()=>handler});var a=r(1802),u=r(7153),i=r(6249),n=r(2113),o=r(2589);async function handler(e,t){let r=await (0,n.getServerSession)(e,t,o.authOptions);if(!r?.user?.email)return t.status(401).json({message:"Unauthorized"});if("POST"!==e.method)return t.status(405).end();let{tweetId:s,comment:a}=e.body;return s?t.status(200).json({message:"POST /api/tweets/quote success"}):t.status(400).json({message:"tweetId is required"})}let d=(0,i.l)(s,"default"),p=(0,i.l)(s,"config"),l=new a.PagesAPIRouteModule({definition:{kind:u.x.PAGES_API,page:"/api/tweets/quote",pathname:"/api/tweets/quote",bundlePath:"",filename:""},userland:s})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222,589],()=>__webpack_exec__(5951));module.exports=r})();